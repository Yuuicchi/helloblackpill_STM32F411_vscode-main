ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.atualizar_leds,"ax",%progbits
  20              		.align	1
  21              		.global	atualizar_leds
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	atualizar_leds:
  27              	.LFB130:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "button.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** void atualizar_leds(uint8_t numero);
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** void atualizar_leds(uint8_t numero)
  59:Core/Src/main.c **** {
  29              		.loc 1 59 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 0346     		mov	r3, r0
  45 0008 FB71     		strb	r3, [r7, #7]
  60:Core/Src/main.c ****     HAL_GPIO_WritePin(digito0_GPIO_Port, digito0_Pin, 0);
  46              		.loc 1 60 5
  47 000a 0022     		movs	r2, #0
  48 000c 0121     		movs	r1, #1
  49 000e 2648     		ldr	r0, .L8
  50 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  61:Core/Src/main.c ****     HAL_GPIO_WritePin(digito1_GPIO_Port, digito1_Pin, 0);
  51              		.loc 1 61 5
  52 0014 0022     		movs	r2, #0
  53 0016 0221     		movs	r1, #2
  54 0018 2348     		ldr	r0, .L8
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 3


  55 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  62:Core/Src/main.c ****     HAL_GPIO_WritePin(digito2_GPIO_Port, digito2_Pin, 0);
  56              		.loc 1 62 5
  57 001e 0022     		movs	r2, #0
  58 0020 0421     		movs	r1, #4
  59 0022 2148     		ldr	r0, .L8
  60 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
  63:Core/Src/main.c ****     HAL_GPIO_WritePin(digito3_GPIO_Port, digito3_Pin, 0);
  61              		.loc 1 63 5
  62 0028 0022     		movs	r2, #0
  63 002a 0821     		movs	r1, #8
  64 002c 1E48     		ldr	r0, .L8
  65 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
  64:Core/Src/main.c ****     HAL_GPIO_WritePin(digito4_GPIO_Port, digito4_Pin, 0);
  66              		.loc 1 64 5
  67 0032 0022     		movs	r2, #0
  68 0034 1021     		movs	r1, #16
  69 0036 1C48     		ldr	r0, .L8
  70 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****     if (numero & (1 << 0))
  71              		.loc 1 66 16
  72 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  73 003e 03F00103 		and	r3, r3, #1
  74              		.loc 1 66 8
  75 0042 002B     		cmp	r3, #0
  76 0044 04D0     		beq	.L2
  67:Core/Src/main.c ****     {
  68:Core/Src/main.c ****         HAL_GPIO_WritePin(digito0_GPIO_Port, digito0_Pin, 1);
  77              		.loc 1 68 9
  78 0046 0122     		movs	r2, #1
  79 0048 0121     		movs	r1, #1
  80 004a 1748     		ldr	r0, .L8
  81 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
  82              	.L2:
  69:Core/Src/main.c ****     }
  70:Core/Src/main.c ****     if (numero & (1 << 1))
  83              		.loc 1 70 16
  84 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  85 0052 03F00203 		and	r3, r3, #2
  86              		.loc 1 70 8
  87 0056 002B     		cmp	r3, #0
  88 0058 04D0     		beq	.L3
  71:Core/Src/main.c ****     {
  72:Core/Src/main.c ****         HAL_GPIO_WritePin(digito1_GPIO_Port, digito1_Pin, 1);
  89              		.loc 1 72 9
  90 005a 0122     		movs	r2, #1
  91 005c 0221     		movs	r1, #2
  92 005e 1248     		ldr	r0, .L8
  93 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
  94              	.L3:
  73:Core/Src/main.c ****     }
  74:Core/Src/main.c ****     if (numero & (1 << 2))
  95              		.loc 1 74 16
  96 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  97 0066 03F00403 		and	r3, r3, #4
  98              		.loc 1 74 8
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 4


  99 006a 002B     		cmp	r3, #0
 100 006c 04D0     		beq	.L4
  75:Core/Src/main.c ****     {
  76:Core/Src/main.c ****         HAL_GPIO_WritePin(digito2_GPIO_Port, digito2_Pin, 1);
 101              		.loc 1 76 9
 102 006e 0122     		movs	r2, #1
 103 0070 0421     		movs	r1, #4
 104 0072 0D48     		ldr	r0, .L8
 105 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 106              	.L4:
  77:Core/Src/main.c ****     }
  78:Core/Src/main.c ****     if (numero & (1 << 3))
 107              		.loc 1 78 16
 108 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 109 007a 03F00803 		and	r3, r3, #8
 110              		.loc 1 78 8
 111 007e 002B     		cmp	r3, #0
 112 0080 04D0     		beq	.L5
  79:Core/Src/main.c ****     {
  80:Core/Src/main.c ****         HAL_GPIO_WritePin(digito3_GPIO_Port, digito3_Pin, 1);
 113              		.loc 1 80 9
 114 0082 0122     		movs	r2, #1
 115 0084 0821     		movs	r1, #8
 116 0086 0848     		ldr	r0, .L8
 117 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 118              	.L5:
  81:Core/Src/main.c ****     }
  82:Core/Src/main.c ****     if (numero & (1 << 4))
 119              		.loc 1 82 16
 120 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 121 008e 03F01003 		and	r3, r3, #16
 122              		.loc 1 82 8
 123 0092 002B     		cmp	r3, #0
 124 0094 04D0     		beq	.L7
  83:Core/Src/main.c ****     {
  84:Core/Src/main.c ****         HAL_GPIO_WritePin(digito4_GPIO_Port, digito4_Pin, 1);
 125              		.loc 1 84 9
 126 0096 0122     		movs	r2, #1
 127 0098 1021     		movs	r1, #16
 128 009a 0348     		ldr	r0, .L8
 129 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 130              	.L7:
  85:Core/Src/main.c ****     }
  86:Core/Src/main.c **** }
 131              		.loc 1 86 1
 132 00a0 00BF     		nop
 133 00a2 0837     		adds	r7, r7, #8
 134              	.LCFI3:
 135              		.cfi_def_cfa_offset 8
 136 00a4 BD46     		mov	sp, r7
 137              	.LCFI4:
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 00a6 80BD     		pop	{r7, pc}
 141              	.L9:
 142              		.align	2
 143              	.L8:
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 5


 144 00a8 00000240 		.word	1073872896
 145              		.cfi_endproc
 146              	.LFE130:
 148              		.section	.text.main,"ax",%progbits
 149              		.align	1
 150              		.global	main
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	main:
 156              	.LFB131:
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END 0 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /**
  91:Core/Src/main.c ****  * @brief  The application entry point.
  92:Core/Src/main.c ****  * @retval int
  93:Core/Src/main.c ****  */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** int main(void)
  97:Core/Src/main.c **** {
 157              		.loc 1 97 1
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 8
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 80B5     		push	{r7, lr}
 162              	.LCFI5:
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 7, -8
 165              		.cfi_offset 14, -4
 166 0002 82B0     		sub	sp, sp, #8
 167              	.LCFI6:
 168              		.cfi_def_cfa_offset 16
 169 0004 00AF     		add	r7, sp, #0
 170              	.LCFI7:
 171              		.cfi_def_cfa_register 7
  98:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  99:Core/Src/main.c ****     uint8_t contagem = 0;
 172              		.loc 1 99 13
 173 0006 0023     		movs	r3, #0
 174 0008 FB71     		strb	r3, [r7, #7]
 100:Core/Src/main.c ****     uint8_t estado_anterior = 0;
 175              		.loc 1 100 13
 176 000a 0023     		movs	r3, #0
 177 000c 7B71     		strb	r3, [r7, #5]
 101:Core/Src/main.c ****     uint8_t estado_atual;
 102:Core/Src/main.c ****     uint8_t ciclo = 1;
 178              		.loc 1 102 13
 179 000e 0123     		movs	r3, #1
 180 0010 BB71     		strb	r3, [r7, #6]
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     /* USER CODE END 1 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 6


 109:Core/Src/main.c ****     HAL_Init();
 181              		.loc 1 109 5
 182 0012 FFF7FEFF 		bl	HAL_Init
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     /* USER CODE BEGIN Init */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     /* USER CODE END Init */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     /* Configure the system clock */
 116:Core/Src/main.c ****     SystemClock_Config();
 183              		.loc 1 116 5
 184 0016 FFF7FEFF 		bl	SystemClock_Config
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****     /* USER CODE END SysInit */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     /* Initialize all configured peripherals */
 123:Core/Src/main.c ****     MX_GPIO_Init();
 185              		.loc 1 123 5
 186 001a FFF7FEFF 		bl	MX_GPIO_Init
 187              	.L15:
 124:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /* Infinite loop */
 129:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 130:Core/Src/main.c ****     while (1)
 131:Core/Src/main.c ****     {
 132:Core/Src/main.c ****         for(ciclo = 0; ciclo < 80; ciclo++)
 188              		.loc 1 132 19
 189 001e 0023     		movs	r3, #0
 190 0020 BB71     		strb	r3, [r7, #6]
 191              		.loc 1 132 9
 192 0022 19E0     		b	.L11
 193              	.L14:
 133:Core/Src/main.c ****         {
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****             //estado_atual = button(botao_GPIO_Port, botao_Pin, 1);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****             //if (estado_atual != estado_anterior)
 138:Core/Src/main.c ****             if(button_release(botao_GPIO_Port, botao_Pin, 1))
 194              		.loc 1 138 16
 195 0024 0122     		movs	r2, #1
 196 0026 0121     		movs	r1, #1
 197 0028 1048     		ldr	r0, .L16
 198 002a FFF7FEFF 		bl	button_release
 199 002e 0346     		mov	r3, r0
 200              		.loc 1 138 15
 201 0030 002B     		cmp	r3, #0
 202 0032 0BD0     		beq	.L12
 139:Core/Src/main.c ****             {
 140:Core/Src/main.c ****                 // estado_anterior = estado_atual;
 141:Core/Src/main.c ****                 // if (estado_atual)
 142:Core/Src/main.c ****                 // {
 143:Core/Src/main.c ****                     contagem += 1;
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 7


 203              		.loc 1 143 30
 204 0034 FB79     		ldrb	r3, [r7, #7]
 205 0036 0133     		adds	r3, r3, #1
 206 0038 FB71     		strb	r3, [r7, #7]
 144:Core/Src/main.c ****                     if (contagem == 32)
 207              		.loc 1 144 24
 208 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 209 003c 202B     		cmp	r3, #32
 210 003e 01D1     		bne	.L13
 145:Core/Src/main.c ****                     {
 146:Core/Src/main.c ****                         contagem = 0;
 211              		.loc 1 146 34
 212 0040 0023     		movs	r3, #0
 213 0042 FB71     		strb	r3, [r7, #7]
 214              	.L13:
 147:Core/Src/main.c ****                     }
 148:Core/Src/main.c ****                     atualizar_leds(contagem);
 215              		.loc 1 148 21
 216 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 217 0046 1846     		mov	r0, r3
 218 0048 FFF7FEFF 		bl	atualizar_leds
 219              	.L12:
 149:Core/Src/main.c ****                 //}
 150:Core/Src/main.c ****             }
 151:Core/Src/main.c ****             HAL_Delay(5);
 220              		.loc 1 151 13 discriminator 2
 221 004c 0520     		movs	r0, #5
 222 004e FFF7FEFF 		bl	HAL_Delay
 132:Core/Src/main.c ****         {
 223              		.loc 1 132 41 discriminator 2
 224 0052 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 225 0054 0133     		adds	r3, r3, #1
 226 0056 BB71     		strb	r3, [r7, #6]
 227              	.L11:
 132:Core/Src/main.c ****         {
 228              		.loc 1 132 30 discriminator 1
 229 0058 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 230 005a 4F2B     		cmp	r3, #79
 231 005c E2D9     		bls	.L14
 152:Core/Src/main.c ****         }
 153:Core/Src/main.c ****         //if (ciclo == 30)
 154:Core/Src/main.c ****         //{
 155:Core/Src/main.c ****         //    ciclo = 1;
 156:Core/Src/main.c ****         //    HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, 0);
 157:Core/Src/main.c ****         //    HAL_Delay(30);
 158:Core/Src/main.c ****         //    HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, 1);
 159:Core/Src/main.c ****         //}
 160:Core/Src/main.c ****         
 161:Core/Src/main.c ****         HAL_GPIO_TogglePin(KIT_LED_GPIO_Port, KIT_LED_Pin);
 232              		.loc 1 161 9
 233 005e 4FF40051 		mov	r1, #8192
 234 0062 0348     		ldr	r0, .L16+4
 235 0064 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 132:Core/Src/main.c ****         {
 236              		.loc 1 132 19
 237 0068 D9E7     		b	.L15
 238              	.L17:
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 8


 239 006a 00BF     		.align	2
 240              	.L16:
 241 006c 00040240 		.word	1073873920
 242 0070 00080240 		.word	1073874944
 243              		.cfi_endproc
 244              	.LFE131:
 246              		.section	.text.SystemClock_Config,"ax",%progbits
 247              		.align	1
 248              		.global	SystemClock_Config
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	SystemClock_Config:
 254              	.LFB132:
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****         /* USER CODE END WHILE */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 166:Core/Src/main.c ****     }
 167:Core/Src/main.c ****     /* USER CODE END 3 */
 168:Core/Src/main.c **** }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /**
 171:Core/Src/main.c ****  * @brief System Clock Configuration
 172:Core/Src/main.c ****  * @retval None
 173:Core/Src/main.c ****  */
 174:Core/Src/main.c **** void SystemClock_Config(void)
 175:Core/Src/main.c **** {
 255              		.loc 1 175 1
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 80
 258              		@ frame_needed = 1, uses_anonymous_args = 0
 259 0000 80B5     		push	{r7, lr}
 260              	.LCFI8:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 94B0     		sub	sp, sp, #80
 265              	.LCFI9:
 266              		.cfi_def_cfa_offset 88
 267 0004 00AF     		add	r7, sp, #0
 268              	.LCFI10:
 269              		.cfi_def_cfa_register 7
 176:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 270              		.loc 1 176 24
 271 0006 07F12003 		add	r3, r7, #32
 272 000a 3022     		movs	r2, #48
 273 000c 0021     		movs	r1, #0
 274 000e 1846     		mov	r0, r3
 275 0010 FFF7FEFF 		bl	memset
 177:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 276              		.loc 1 177 24
 277 0014 07F10C03 		add	r3, r7, #12
 278 0018 0022     		movs	r2, #0
 279 001a 1A60     		str	r2, [r3]
 280 001c 5A60     		str	r2, [r3, #4]
 281 001e 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 9


 282 0020 DA60     		str	r2, [r3, #12]
 283 0022 1A61     		str	r2, [r3, #16]
 284              	.LBB4:
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****     /** Configure the main internal regulator output voltage
 180:Core/Src/main.c ****      */
 181:Core/Src/main.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 285              		.loc 1 181 5
 286 0024 0023     		movs	r3, #0
 287 0026 BB60     		str	r3, [r7, #8]
 288 0028 274B     		ldr	r3, .L22
 289 002a 1B6C     		ldr	r3, [r3, #64]
 290 002c 264A     		ldr	r2, .L22
 291 002e 43F08053 		orr	r3, r3, #268435456
 292 0032 1364     		str	r3, [r2, #64]
 293 0034 244B     		ldr	r3, .L22
 294 0036 1B6C     		ldr	r3, [r3, #64]
 295 0038 03F08053 		and	r3, r3, #268435456
 296 003c BB60     		str	r3, [r7, #8]
 297 003e BB68     		ldr	r3, [r7, #8]
 298              	.LBE4:
 299              	.LBB5:
 182:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 300              		.loc 1 182 5
 301 0040 0023     		movs	r3, #0
 302 0042 7B60     		str	r3, [r7, #4]
 303 0044 214B     		ldr	r3, .L22+4
 304 0046 1B68     		ldr	r3, [r3]
 305 0048 204A     		ldr	r2, .L22+4
 306 004a 43F44043 		orr	r3, r3, #49152
 307 004e 1360     		str	r3, [r2]
 308 0050 1E4B     		ldr	r3, .L22+4
 309 0052 1B68     		ldr	r3, [r3]
 310 0054 03F44043 		and	r3, r3, #49152
 311 0058 7B60     		str	r3, [r7, #4]
 312 005a 7B68     		ldr	r3, [r7, #4]
 313              	.LBE5:
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 185:Core/Src/main.c ****      * in the RCC_OscInitTypeDef structure.
 186:Core/Src/main.c ****      */
 187:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 314              		.loc 1 187 38
 315 005c 0123     		movs	r3, #1
 316 005e 3B62     		str	r3, [r7, #32]
 188:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 317              		.loc 1 188 32
 318 0060 4FF48033 		mov	r3, #65536
 319 0064 7B62     		str	r3, [r7, #36]
 189:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 320              		.loc 1 189 36
 321 0066 0223     		movs	r3, #2
 322 0068 BB63     		str	r3, [r7, #56]
 190:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 323              		.loc 1 190 37
 324 006a 4FF48003 		mov	r3, #4194304
 325 006e FB63     		str	r3, [r7, #60]
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 10


 191:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 25;
 326              		.loc 1 191 32
 327 0070 1923     		movs	r3, #25
 328 0072 3B64     		str	r3, [r7, #64]
 192:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 192;
 329              		.loc 1 192 32
 330 0074 C023     		movs	r3, #192
 331 0076 7B64     		str	r3, [r7, #68]
 193:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 332              		.loc 1 193 32
 333 0078 0223     		movs	r3, #2
 334 007a BB64     		str	r3, [r7, #72]
 194:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = 4;
 335              		.loc 1 194 32
 336 007c 0423     		movs	r3, #4
 337 007e FB64     		str	r3, [r7, #76]
 195:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 338              		.loc 1 195 9
 339 0080 07F12003 		add	r3, r7, #32
 340 0084 1846     		mov	r0, r3
 341 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 342 008a 0346     		mov	r3, r0
 343              		.loc 1 195 8
 344 008c 002B     		cmp	r3, #0
 345 008e 01D0     		beq	.L19
 196:Core/Src/main.c ****     {
 197:Core/Src/main.c ****         Error_Handler();
 346              		.loc 1 197 9
 347 0090 FFF7FEFF 		bl	Error_Handler
 348              	.L19:
 198:Core/Src/main.c ****     }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****     /** Initializes the CPU, AHB and APB buses clocks
 201:Core/Src/main.c ****      */
 202:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 |
 349              		.loc 1 202 33
 350 0094 0F23     		movs	r3, #15
 351 0096 FB60     		str	r3, [r7, #12]
 203:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 352              		.loc 1 203 36
 353 0098 0223     		movs	r3, #2
 354 009a 3B61     		str	r3, [r7, #16]
 204:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 355              		.loc 1 204 37
 356 009c 0023     		movs	r3, #0
 357 009e 7B61     		str	r3, [r7, #20]
 205:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 358              		.loc 1 205 38
 359 00a0 4FF48053 		mov	r3, #4096
 360 00a4 BB61     		str	r3, [r7, #24]
 206:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 361              		.loc 1 206 38
 362 00a6 0023     		movs	r3, #0
 363 00a8 FB61     		str	r3, [r7, #28]
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 364              		.loc 1 208 9
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 11


 365 00aa 07F10C03 		add	r3, r7, #12
 366 00ae 0321     		movs	r1, #3
 367 00b0 1846     		mov	r0, r3
 368 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 369 00b6 0346     		mov	r3, r0
 370              		.loc 1 208 8
 371 00b8 002B     		cmp	r3, #0
 372 00ba 01D0     		beq	.L21
 209:Core/Src/main.c ****     {
 210:Core/Src/main.c ****         Error_Handler();
 373              		.loc 1 210 9
 374 00bc FFF7FEFF 		bl	Error_Handler
 375              	.L21:
 211:Core/Src/main.c ****     }
 212:Core/Src/main.c **** }
 376              		.loc 1 212 1
 377 00c0 00BF     		nop
 378 00c2 5037     		adds	r7, r7, #80
 379              	.LCFI11:
 380              		.cfi_def_cfa_offset 8
 381 00c4 BD46     		mov	sp, r7
 382              	.LCFI12:
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 00c6 80BD     		pop	{r7, pc}
 386              	.L23:
 387              		.align	2
 388              	.L22:
 389 00c8 00380240 		.word	1073887232
 390 00cc 00700040 		.word	1073770496
 391              		.cfi_endproc
 392              	.LFE132:
 394              		.section	.text.MX_GPIO_Init,"ax",%progbits
 395              		.align	1
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	MX_GPIO_Init:
 401              	.LFB133:
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** /**
 215:Core/Src/main.c ****  * @brief GPIO Initialization Function
 216:Core/Src/main.c ****  * @param None
 217:Core/Src/main.c ****  * @retval None
 218:Core/Src/main.c ****  */
 219:Core/Src/main.c **** static void MX_GPIO_Init(void)
 220:Core/Src/main.c **** {
 402              		.loc 1 220 1
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 40
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406 0000 80B5     		push	{r7, lr}
 407              	.LCFI13:
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 7, -8
 410              		.cfi_offset 14, -4
 411 0002 8AB0     		sub	sp, sp, #40
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 12


 412              	.LCFI14:
 413              		.cfi_def_cfa_offset 48
 414 0004 00AF     		add	r7, sp, #0
 415              	.LCFI15:
 416              		.cfi_def_cfa_register 7
 221:Core/Src/main.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
 417              		.loc 1 221 22
 418 0006 07F11403 		add	r3, r7, #20
 419 000a 0022     		movs	r2, #0
 420 000c 1A60     		str	r2, [r3]
 421 000e 5A60     		str	r2, [r3, #4]
 422 0010 9A60     		str	r2, [r3, #8]
 423 0012 DA60     		str	r2, [r3, #12]
 424 0014 1A61     		str	r2, [r3, #16]
 425              	.LBB6:
 222:Core/Src/main.c ****     /* USER CODE BEGIN MX_GPIO_Init_1 */
 223:Core/Src/main.c ****     /* USER CODE END MX_GPIO_Init_1 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****     /* GPIO Ports Clock Enable */
 226:Core/Src/main.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 426              		.loc 1 226 5
 427 0016 0023     		movs	r3, #0
 428 0018 3B61     		str	r3, [r7, #16]
 429 001a 374B     		ldr	r3, .L25
 430 001c 1B6B     		ldr	r3, [r3, #48]
 431 001e 364A     		ldr	r2, .L25
 432 0020 43F00403 		orr	r3, r3, #4
 433 0024 1363     		str	r3, [r2, #48]
 434 0026 344B     		ldr	r3, .L25
 435 0028 1B6B     		ldr	r3, [r3, #48]
 436 002a 03F00403 		and	r3, r3, #4
 437 002e 3B61     		str	r3, [r7, #16]
 438 0030 3B69     		ldr	r3, [r7, #16]
 439              	.LBE6:
 440              	.LBB7:
 227:Core/Src/main.c ****     __HAL_RCC_GPIOH_CLK_ENABLE();
 441              		.loc 1 227 5
 442 0032 0023     		movs	r3, #0
 443 0034 FB60     		str	r3, [r7, #12]
 444 0036 304B     		ldr	r3, .L25
 445 0038 1B6B     		ldr	r3, [r3, #48]
 446 003a 2F4A     		ldr	r2, .L25
 447 003c 43F08003 		orr	r3, r3, #128
 448 0040 1363     		str	r3, [r2, #48]
 449 0042 2D4B     		ldr	r3, .L25
 450 0044 1B6B     		ldr	r3, [r3, #48]
 451 0046 03F08003 		and	r3, r3, #128
 452 004a FB60     		str	r3, [r7, #12]
 453 004c FB68     		ldr	r3, [r7, #12]
 454              	.LBE7:
 455              	.LBB8:
 228:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 456              		.loc 1 228 5
 457 004e 0023     		movs	r3, #0
 458 0050 BB60     		str	r3, [r7, #8]
 459 0052 294B     		ldr	r3, .L25
 460 0054 1B6B     		ldr	r3, [r3, #48]
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 13


 461 0056 284A     		ldr	r2, .L25
 462 0058 43F00103 		orr	r3, r3, #1
 463 005c 1363     		str	r3, [r2, #48]
 464 005e 264B     		ldr	r3, .L25
 465 0060 1B6B     		ldr	r3, [r3, #48]
 466 0062 03F00103 		and	r3, r3, #1
 467 0066 BB60     		str	r3, [r7, #8]
 468 0068 BB68     		ldr	r3, [r7, #8]
 469              	.LBE8:
 470              	.LBB9:
 229:Core/Src/main.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 471              		.loc 1 229 5
 472 006a 0023     		movs	r3, #0
 473 006c 7B60     		str	r3, [r7, #4]
 474 006e 224B     		ldr	r3, .L25
 475 0070 1B6B     		ldr	r3, [r3, #48]
 476 0072 214A     		ldr	r2, .L25
 477 0074 43F00203 		orr	r3, r3, #2
 478 0078 1363     		str	r3, [r2, #48]
 479 007a 1F4B     		ldr	r3, .L25
 480 007c 1B6B     		ldr	r3, [r3, #48]
 481 007e 03F00203 		and	r3, r3, #2
 482 0082 7B60     		str	r3, [r7, #4]
 483 0084 7B68     		ldr	r3, [r7, #4]
 484              	.LBE9:
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****     /*Configure GPIO pin Output Level */
 232:Core/Src/main.c ****     HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 485              		.loc 1 232 5
 486 0086 0022     		movs	r2, #0
 487 0088 4FF40051 		mov	r1, #8192
 488 008c 1B48     		ldr	r0, .L25+4
 489 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****     /*Configure GPIO pin Output Level */
 235:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, digito0_Pin | digito1_Pin | digito2_Pin | digito3_Pin | digito4_Pin, G
 490              		.loc 1 235 5
 491 0092 0022     		movs	r2, #0
 492 0094 1F21     		movs	r1, #31
 493 0096 1A48     		ldr	r0, .L25+8
 494 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****     /*Configure GPIO pin : KIT_LED_Pin */
 238:Core/Src/main.c ****     GPIO_InitStruct.Pin = KIT_LED_Pin;
 495              		.loc 1 238 25
 496 009c 4FF40053 		mov	r3, #8192
 497 00a0 7B61     		str	r3, [r7, #20]
 239:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 498              		.loc 1 239 26
 499 00a2 0123     		movs	r3, #1
 500 00a4 BB61     		str	r3, [r7, #24]
 240:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 501              		.loc 1 240 26
 502 00a6 0023     		movs	r3, #0
 503 00a8 FB61     		str	r3, [r7, #28]
 241:Core/Src/main.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 504              		.loc 1 241 27
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 14


 505 00aa 0023     		movs	r3, #0
 506 00ac 3B62     		str	r3, [r7, #32]
 242:Core/Src/main.c ****     HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 507              		.loc 1 242 5
 508 00ae 07F11403 		add	r3, r7, #20
 509 00b2 1946     		mov	r1, r3
 510 00b4 1148     		ldr	r0, .L25+4
 511 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****     /*Configure GPIO pins : digito0_Pin digito1_Pin digito2_Pin digito3_Pin
 245:Core/Src/main.c ****                              digito4_Pin */
 246:Core/Src/main.c ****     GPIO_InitStruct.Pin = digito0_Pin | digito1_Pin | digito2_Pin | digito3_Pin | digito4_Pin;
 512              		.loc 1 246 25
 513 00ba 1F23     		movs	r3, #31
 514 00bc 7B61     		str	r3, [r7, #20]
 247:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 515              		.loc 1 247 26
 516 00be 0123     		movs	r3, #1
 517 00c0 BB61     		str	r3, [r7, #24]
 248:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 518              		.loc 1 248 26
 519 00c2 0023     		movs	r3, #0
 520 00c4 FB61     		str	r3, [r7, #28]
 249:Core/Src/main.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 521              		.loc 1 249 27
 522 00c6 0023     		movs	r3, #0
 523 00c8 3B62     		str	r3, [r7, #32]
 250:Core/Src/main.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 524              		.loc 1 250 5
 525 00ca 07F11403 		add	r3, r7, #20
 526 00ce 1946     		mov	r1, r3
 527 00d0 0B48     		ldr	r0, .L25+8
 528 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****     /*Configure GPIO pin : botao_Pin */
 253:Core/Src/main.c ****     GPIO_InitStruct.Pin = botao_Pin;
 529              		.loc 1 253 25
 530 00d6 0123     		movs	r3, #1
 531 00d8 7B61     		str	r3, [r7, #20]
 254:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 532              		.loc 1 254 26
 533 00da 0023     		movs	r3, #0
 534 00dc BB61     		str	r3, [r7, #24]
 255:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 535              		.loc 1 255 26
 536 00de 0023     		movs	r3, #0
 537 00e0 FB61     		str	r3, [r7, #28]
 256:Core/Src/main.c ****     HAL_GPIO_Init(botao_GPIO_Port, &GPIO_InitStruct);
 538              		.loc 1 256 5
 539 00e2 07F11403 		add	r3, r7, #20
 540 00e6 1946     		mov	r1, r3
 541 00e8 0648     		ldr	r0, .L25+12
 542 00ea FFF7FEFF 		bl	HAL_GPIO_Init
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****     /* USER CODE BEGIN MX_GPIO_Init_2 */
 259:Core/Src/main.c ****     /* USER CODE END MX_GPIO_Init_2 */
 260:Core/Src/main.c **** }
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 15


 543              		.loc 1 260 1
 544 00ee 00BF     		nop
 545 00f0 2837     		adds	r7, r7, #40
 546              	.LCFI16:
 547              		.cfi_def_cfa_offset 8
 548 00f2 BD46     		mov	sp, r7
 549              	.LCFI17:
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed
 552 00f4 80BD     		pop	{r7, pc}
 553              	.L26:
 554 00f6 00BF     		.align	2
 555              	.L25:
 556 00f8 00380240 		.word	1073887232
 557 00fc 00080240 		.word	1073874944
 558 0100 00000240 		.word	1073872896
 559 0104 00040240 		.word	1073873920
 560              		.cfi_endproc
 561              	.LFE133:
 563              		.section	.text.Error_Handler,"ax",%progbits
 564              		.align	1
 565              		.global	Error_Handler
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 570              	Error_Handler:
 571              	.LFB134:
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /* USER CODE END 4 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** /**
 267:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 268:Core/Src/main.c ****  * @retval None
 269:Core/Src/main.c ****  */
 270:Core/Src/main.c **** void Error_Handler(void)
 271:Core/Src/main.c **** {
 572              		.loc 1 271 1
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577 0000 80B4     		push	{r7}
 578              	.LCFI18:
 579              		.cfi_def_cfa_offset 4
 580              		.cfi_offset 7, -4
 581 0002 00AF     		add	r7, sp, #0
 582              	.LCFI19:
 583              		.cfi_def_cfa_register 7
 584              	.LBB10:
 585              	.LBB11:
 586              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 16


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 17


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 18


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 587              		.loc 2 142 3
 588              		.syntax unified
 589              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 590 0004 72B6     		cpsid i
 591              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 592              		.loc 2 143 1
 593              		.thumb
 594              		.syntax unified
 595 0006 00BF     		nop
 596              	.L28:
 597              	.LBE11:
 598              	.LBE10:
 272:Core/Src/main.c ****     /* USER CODE BEGIN Error_Handler_Debug */
 273:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 274:Core/Src/main.c ****     __disable_irq();
 275:Core/Src/main.c ****     while (1)
 599              		.loc 1 275 11 discriminator 1
 600 0008 FEE7     		b	.L28
 601              		.cfi_endproc
 602              	.LFE134:
 604              		.text
 605              	.Letext0:
 606              		.file 3 "c:\\arm-cc\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\incl
 607              		.file 4 "c:\\arm-cc\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\incl
 608              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 609              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 610              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 611              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 612              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 613              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 614              		.file 11 "Core/Inc/button.h"
ARM GAS  C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:20     .text.atualizar_leds:00000000 $t
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:26     .text.atualizar_leds:00000000 atualizar_leds
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:144    .text.atualizar_leds:000000a8 $d
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:149    .text.main:00000000 $t
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:155    .text.main:00000000 main
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:253    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:400    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:241    .text.main:0000006c $d
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:247    .text.SystemClock_Config:00000000 $t
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:570    .text.Error_Handler:00000000 Error_Handler
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:389    .text.SystemClock_Config:000000c8 $d
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:395    .text.MX_GPIO_Init:00000000 $t
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:556    .text.MX_GPIO_Init:000000f8 $d
C:\Users\hayas\AppData\Local\Temp\cc5OIcip.s:564    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_Init
button_release
HAL_Delay
HAL_GPIO_TogglePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_Init
